<?xml version="1.0" encoding="UTF-8"?>


<module description="cpsw_sl" id="cpsw_sl">
  
  
  <register acronym="IDVER" description="CPGMAC_SL ID/VERSION REGISTER" id="IDVER" offset="0x0" width="32">
    
  <bitfield begin="31" description="Rx Identification Value" end="16" id="IDENT" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="Rx Z value (X.Y.Z)" end="11" id="Z" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="Rx X value (major)" end="8" id="X" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="Rx Y value (minor)" end="0" id="Y" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MACCONTROL" description="CPGMAC_SL MAC CONTROL REGISTER" id="MACCONTROL" offset="0x4" width="32">
    
  <bitfield begin="31" description="Reserved" end="25" id="Reserved3" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="24" description="RX Copy MAC Control Frames Enable - Enables MAC control frames to be  transferred to memory.  MAC control frames are normally acted upon (if  enabled), but not copied to memory.  MAC control frames that are pause  frames will be acted upon if enabled in the MacControl register, regardless  of the value of rx_cmf_en.  Frames transferred to memory due to  rx_cmf_en will have the control bit set in their EOP buffer descriptor.    0 - MAC control frames are filtered (but acted upon if enabled).   1 - MAC control frames are transferred to memory. " end="24" id="RX_CMF_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="RX Copy Short Frames Enable - Enables frames or fragments shorter than  64 bytes to be copied to memory.  Frames transferred to memory due to  rx_csf_en will have the fragment or undersized bit set in their receive  footer.  Fragments are short frames that contain CRC/align/code errors and  undersized are short frames without errors.   0 - Short frames are filtered   1 - Short frames are transferred to memory. " end="23" id="RX_CSF_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="RX Copy Error Frames Enable - Enables frames containing errors to be  transferred to memory.  The appropriate error bit will be set in the frame  receive footer.   Frames containing errors will be filtered when rx_cef _en is  not set.   0 - Frames containing errors are filtered.   1 - Frames containing errors are transferred to memory. " end="22" id="RX_CEF_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Transmit Short Gap Limit Enable  When set this bit limits the number of short gap packets transmitted to  100ppm.  Each time a short gap packet is sent, a counter is loaded with  10,000 and decremented on each wireside clock.  Another short gap packet  will not be sent out until the counter decrements to zero.  This mode is  included to preclude the host from filling up the FIFO and sending every  packet out with short gap which would violate the maximum number of  packets per second allowed. " end="21" id="TX_SHORT_GAP_LIM_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Reserved" end="19" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="18" description="Control Enable - Enables the fullduplex and gigabit mode to be selected  from the FULLDUPLEX_IN and GIG_IN input signals and not from the  fullduplex and gig bits in this register.  The FULLDUPLEX_MODE bit  reflects the actual fullduplex mode selected. " end="18" id="EXT_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Gigabit Mode Force - This bit is used to force the CPGMAC_SL into  gigabit mode if the input GMII_MTCLK has been stopped by the PHY. " end="17" id="GIG_FORCE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Connects to the speed_in input of the respective RMII gasket. When using RMII mode:   0 - 10Mbps operation   1 - 100Mbps operation" end="16" id="IFCTL_B" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Connects to the speed_in input of the respective RMII gasket. When using RMII mode:   0 - 10Mbps operation   1 - 100Mbps operation" end="15" id="IFCTL_A" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Reserved" end="12" id="Reserved1" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="11" description="Command Idle   0 - Idle not commanded   1 - Idle Commanded (read idle in MacStatus) " end="11" id="CMD_IDLE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Transmit Short Gap Enable   0 - Transmit with a short IPG is disabled   1 - Transmit with a short IPG (when TX_SHORT_GAP input is asserted) is              enabled. " end="10" id="TX_SHORT_GAP_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Reserved" end="8" id="Reserved" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="7" description="Gigabit Mode -    0 - 10/100 mode   1 - Gigabit mode (full duplex only) The GIG_OUT output is the value of this bit. " end="7" id="GIG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Transmit Pacing Enable   0 - Transmit Pacing Disabled   1 - Transmit Pacing Enabled " end="6" id="TX_PACE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="GMII Enable -    0 - GMII RX and TX held in reset.   1 - GMII RX and TX released from reset. " end="5" id="GMII_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Transmit Flow Control Enable -  Determines if incoming pause frames are  acted upon in full-duplex mode.  Incoming pause frames are not acted  upon in half-duplex mode regardless of this bit setting.  The  RX_MBP_Enable bits determine whether or not received pause frames are  transferred to memory.   0 - Transmit Flow Control Disabled.           Full-duplex mode - Incoming pause frames are not acted upon.   1 - Transmit Flow Control Enabled .           Full-duplex mode - Incoming pause frames are acted upon. " end="4" id="TX_FLOW_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Receive Flow Control Enable -    0 - Receive Flow Control Disabled         Half-duplex mode - No flow control generated collisions are sent.         Full-duplex mode - No outgoing pause frames are sent.   1 - Receive Flow Control Enabled         Half-duplex mode -  Collisions are initiated when receive                                          flow control is triggered.           Full-duplex mode -   Outgoing pause frames are sent when                                           receive flow control is triggered.  " end="3" id="RX_FLOW_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Manufacturing Test mode - This bit must be set to allow writes to the   Backoff_Test and PauseTimer registers. " end="2" id="MTEST" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Loop Back Mode - Loopback mode forces internal fullduplex mode  regardless of whether the fullduplex bit is set or not.  The loopback bit  should be changed only when GMII_en is deasserted.   0 - Not looped back   1 - Loop Back Mode enabled " end="1" id="LOOPBACK" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Full Duplex mode - Gigabit mode forces fullduplex mode regardless of  whether the fullduplex bit is set or not.  The FULLDUPLEX_OUT output is  the value of this register bit   0 - half duplex mode   1 - full duplex mode " end="0" id="FULLDUPLEX" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MACSTATUS" description="CPGMAC_SL MAC STATUS REGISTER" id="MACSTATUS" offset="0x8" width="32">
    
  <bitfield begin="31" description="CPGMAC_SL IDLE - The CPGMAC_SL is in the idle state (valid after an idle  command)   0 - The CPGMAC_SL is not in the idle state.   1 -  The CPGMAC_SL is in the idle state. " end="31" id="IDLE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved" end="5" id="Reserved1" rwaccess="R" width="26"></bitfield>
    
  <bitfield begin="4" description="External GIG - This is the value of the EXT_GIG input bit." end="4" id="EXT_GIG" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="External Fullduplex - This is the value of the EXT_FULLDUPLEX input bit." end="3" id="EXT_FULLDUPLEX" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Reserved" end="2" id="Reserved" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Receive Flow Control Active - When asserted, indicates that receive flow  control is enabled and triggered. " end="1" id="RX_FLOW_ACT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Transmit Flow Control Active - When asserted, this bit indicates that the pause  time period is being observed for a received pause frame.  No new  transmissions will begin while this bit is asserted except for the transmission  of pause frames.  Any transmission in progress when this bit is asserted will  complete. " end="0" id="TX_FLOW_ACT" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="SOFT_RESET" description="CPGMAC_SL SOFT RESET REGISTER" id="SOFT_RESET" offset="0xC" width="32">
    
  <bitfield begin="31" description="Reserved" end="1" id="Reserved" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description="Software reset - Writing a one to this bit causes the CPGMAC_SL logic to  be reset.  After writing a one to this bit, it may be polled to determine if the  reset has occurred.  If a one is read, the reset has not yet occurred.  If a  zero is read then reset has occurred. " end="0" id="SOFT_RESET" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="RX_MAXLEN" description="CPGMAC_SL RX MAXIMUM LENGTH REGISTER" id="RX_MAXLEN" offset="0x10" width="32">
    
  <bitfield begin="31" description="Reserved" end="14" id="Reserved" rwaccess="R" width="18"></bitfield>
    
  <bitfield begin="13" description="RX Maximum Frame Length - This field determines the maximum length  of a received frame.  The reset value is 1518 (dec).  Frames with byte  counts greater than rx_maxlen are long frames.  Long frames with no  errors are oversized frames.  Long frames with CRC, code, or alignment  error are jabber frames.  The maximum value is 16,383. " end="0" id="RX_MAXLEN" rwaccess="RW" width="14"></bitfield>
  </register>
  
  
  <register acronym="BOFFTEST" description="CPGMAC_SL BACKOFF TEST REGISTER" id="BOFFTEST" offset="0x14" width="32">
    
  <bitfield begin="31" description="Reserved" end="31" id="Reserved1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="Pacing Register Current Value. A non-zero value in this field indicates that  transmit pacing is active. A transmit frame collision or deferral causes paceval  to loaded with decimal 31, good frame transmissions (with no collisions or  deferrals) cause paceval to be decremented down to zero.  When paceval is  nonzero, the transmitter delays 4 IPGs between new frame transmissions after  each successfully transmitted frame that had no deferrals or collisions.   Transmit pacing helps reduce &quot;capture&quot; effects improving overall network  bandwidth. " end="26" id="PACEVAL" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="25" description="Backoff Random Number Generator - This field allows the Backoff Random  Number Generator to be read (or written in test mode only). This field can be  written only when mtest has previously been set. Reading this field returns the  generator's current value.  The value is reset to zero and begins counting on the  clock after the deassertion of reset. " end="16" id="RNDNUM" rwaccess="RW" width="10"></bitfield>
    
  <bitfield begin="15" description="Collision Count - The number of collisions the current frame has experienced." end="12" id="COLL_COUNT" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="11" description="Reserved" end="10" id="Reserved" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="9" description="Backoff Count - This field allows the current value of the backoff counter to be  observed for test purposes.  This field is loaded automatically according to the  backoff algorithm, and is decremented by one for each slot time after the  collision. " end="0" id="TX_BACKOFF" rwaccess="R" width="10"></bitfield>
  </register>
  
  
  <register acronym="RX_PAUSE" description="CPGMAC_SL RECEIVE PAUSE TIMER REGISTER" id="RX_PAUSE" offset="0x18" width="32">
    
  <bitfield begin="31" description="RX Pause Timer Value - This field allows the contents of the receive pause  timer to be observed (and written in test mode).  The receive pause timer is  loaded with 0xFF00 when the CPGMAC_SL sends an outgoing pause frame  (with pause time of 0xFFFF).  The receive pause timer is decremented at slot  time intervals.  If the receive pause timer decrements to zero, then another  outgoing pause frame will be sent and the load/decrement process will be  repeated." end="16" id="rx_pausetimer" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="0" id="Reserved" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="TX_PAUSE" description="CPGMAC_SL TRANSMIT PAUSE TIMER REGISTER" id="TX_PAUSE" offset="0x1C" width="32">
    
  <bitfield begin="31" description="TX Pause Timer Value - This field allows the contents of the transmit pause  timer to be observed (and written in test mode).   The transmit pause timer is  loaded by a received (incoming) pause frame, and then decremented, at  slottime intervals, down to zero at which time CPGMAC_SL transmit frames  are again enabled." end="16" id="tx_pausetimer" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="0" id="Reserved" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="EMCONTROL" description="CPGMAC_SL EMULATION CONTROL REGISTER" id="EMCONTROL" offset="0x20" width="32">
    
  <bitfield begin="31" description="Reserved" end="2" id="Reserved" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Emulation Soft Bit" end="1" id="SOFT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Emulation Free Bit" end="0" id="FREE" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="RX_PRI_MAP" description="CPGMAC_SL RX PKT PRIORITY TO HEADER PRIORITY MAPPING REGISTER" id="RX_PRI_MAP" offset="0x24" width="32">
    
  <bitfield begin="31" description="Reserved" end="31" id="Reserved7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="Priority 7 - A packet priority of 0x7 is mapped (changed) to this value." end="28" id="PRI7" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="27" description="Reserved" end="27" id="Reserved6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description="Priority 6 - A packet priority of 0x6 is mapped (changed) to this value." end="24" id="PRI6" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="23" id="Reserved5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="22" description="Priority 5 - A packet priority of 0x5 is mapped (changed) to this value." end="20" id="PRI5" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="19" description="Reserved" end="19" id="Reserved4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="Priority 4 - A packet priority of 0x4 is mapped (changed) to this value." end="16" id="PRI4" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="15" id="Reserved3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Priority 3 - A packet priority of 0x3 is mapped (changed) to this value." end="12" id="PRI3" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="11" description="Reserved" end="11" id="Reserved2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="Priority 2 - A packet priority of 0x2 is mapped (changed) to this value." end="8" id="PRI2" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="7" id="Reserved1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Priority 1 - A packet priority of 0x1 is mapped (changed) to this value." end="4" id="PRI1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description="Reserved" end="3" id="Reserved" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Priority 0 - A packet priority of 0x0 is mapped (changed) to this value." end="0" id="PRI0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="TX_GAP" description="TRANSMIT INTER-PACKET GAP REGISTER" id="TX_GAP" offset="0x28" width="32">
    
  <bitfield begin="31" description="Reserved" end="9" id="Reserved" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="Transmit Inter-Packet Gap" end="0" id="TX_GAP" rwaccess="RW" width="9"></bitfield>
  </register>
</module>
