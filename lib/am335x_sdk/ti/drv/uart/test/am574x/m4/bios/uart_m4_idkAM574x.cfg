/**
 *  \file   uart_m4_idkAM574x.cfg
 *
 *  \brief  Sysbios config file for uart M4 test project on AM574X IDK EVM.
 *
 */

/*
 * Copyright (C) 2017 Texas Instruments Incorporated - http://www.ti.com/
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the
 * distribution.
 *
 * Neither the name of Texas Instruments Incorporated nor the names of
 * its contributors may be used to endorse or promote products derived
 * from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
/* ================ General configuration ================ */
var Main 			= xdc.useModule('xdc.runtime.Main');
var System 			= xdc.useModule('xdc.runtime.System');
var Task 			= xdc.useModule('ti.sysbios.knl.Task');
var Mailbox = xdc.useModule('ti.sysbios.knl.Mailbox');
var Semaphore 		= xdc.useModule('ti.sysbios.knl.Semaphore');
var Timer = xdc.useModule('ti.sysbios.hal.Timer');

/* ================ BIOS configuration ================ */
var BIOS 		= xdc.useModule('ti.sysbios.BIOS');
/*
 * Create and install logger for the whole system
 */
BIOS.libType = BIOS.LibType_Custom;
/*
 * The BIOS module will create the default heap for the system.
 * Specify the size of this default heap.
 */
BIOS.heapSize = 0xA0000;

/* ================ Task configuration ================ */

/* Define and add one Task Hook Set */
Task.addHookSet({
	registerFxn: '&TaskRegisterId',
	switchFxn: '&mySwitch',
});

/* ================ Driver configuration ================ */
/* Load the OSAL package */
var osType = "tirtos"
var Osal = xdc.useModule('ti.osal.Settings');
Osal.osType = osType;

/*use CSL package*/
var socType           = "am574x";
var Csl = xdc.loadPackage('ti.csl');
Csl.Settings.deviceType = socType;

/* Load Profiling package */
var Utils = xdc.loadPackage('ti.utils.profiling');

/* Load the uart package */
var Uart = xdc.loadPackage('ti.drv.uart');
Uart.Settings.enableProfiling = true;

var I2c 			= xdc.loadPackage('ti.drv.i2c');
I2c.Settings.socType = socType;

/* Load the board package */
var Board = xdc.loadPackage('ti.board');
Board.Settings.boardName = "idkAM574x";

/* ================ Cache and MMU configuration ================ */

/* Enable cache */
var Cache       = xdc.useModule('ti.sysbios.hal.unicache.Cache');
Cache.enableCache = true;

/* Use AMMU module */
var AMMU            = xdc.useModule('ti.sysbios.hal.ammu.AMMU');

/* Large PAGE */
AMMU.largePages[0].pageEnabled = AMMU.Enable_YES;
AMMU.largePages[0].logicalAddress = 0x40000000;
AMMU.largePages[0].translatedAddress = 0x40000000;
AMMU.largePages[0].translationEnabled = AMMU.Enable_YES;
AMMU.largePages[0].size = AMMU.Large_512M;
AMMU.largePages[0].L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.largePages[0].L1_posted = AMMU.PostedPolicy_NON_POSTED;
AMMU.largePages[0].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.largePages[0].L2_posted = AMMU.PostedPolicy_NON_POSTED;

AMMU.largePages[1].pageEnabled = AMMU.Enable_YES;
AMMU.largePages[1].logicalAddress = 0x80000000;
AMMU.largePages[1].translatedAddress = 0x80000000;
AMMU.largePages[1].translationEnabled = AMMU.Enable_YES;
AMMU.largePages[1].size = AMMU.Large_512M;
AMMU.largePages[1].L1_writePolicy = AMMU.WritePolicy_WRITE_BACK;
AMMU.largePages[1].L1_allocate = AMMU.AllocatePolicy_ALLOCATE;
AMMU.largePages[1].L1_cacheable = AMMU.CachePolicy_CACHEABLE;
AMMU.largePages[1].L1_posted = AMMU.PostedPolicy_POSTED;
AMMU.largePages[1].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.largePages[1].L2_posted = AMMU.PostedPolicy_NON_POSTED;

AMMU.largePages[2].pageEnabled = AMMU.Enable_YES;
AMMU.largePages[2].logicalAddress = 0xA0000000;
AMMU.largePages[2].translatedAddress = 0xA0000000;
AMMU.largePages[2].translationEnabled = AMMU.Enable_YES;
AMMU.largePages[2].size = AMMU.Large_512M;
AMMU.largePages[2].L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.largePages[2].L1_posted = AMMU.PostedPolicy_NON_POSTED;
AMMU.largePages[2].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.largePages[2].L2_posted = AMMU.PostedPolicy_NON_POSTED;

AMMU.largePages[3].pageEnabled = AMMU.Enable_YES;
AMMU.largePages[3].logicalAddress = 0x60000000;
AMMU.largePages[3].translatedAddress = 0x40000000;
AMMU.largePages[3].translationEnabled = AMMU.Enable_YES;
AMMU.largePages[3].size = AMMU.Large_512M;
AMMU.largePages[3].L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.largePages[3].L1_posted = AMMU.PostedPolicy_NON_POSTED;
AMMU.largePages[3].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.largePages[3].L2_posted = AMMU.PostedPolicy_NON_POSTED;

/* Medium Page */
AMMU.mediumPages[0].pageEnabled = AMMU.Enable_YES;
AMMU.mediumPages[0].logicalAddress = 0x00300000;
AMMU.mediumPages[0].translatedAddress = 0x40300000;
AMMU.mediumPages[0].translationEnabled = AMMU.Enable_YES;
AMMU.mediumPages[0].size = AMMU.Medium_256K;

AMMU.mediumPages[1].pageEnabled = AMMU.Enable_YES;
AMMU.mediumPages[1].logicalAddress = 0x00400000;
AMMU.mediumPages[1].translatedAddress = 0x40400000;
AMMU.mediumPages[1].translationEnabled = AMMU.Enable_YES;
AMMU.mediumPages[1].size = AMMU.Medium_256K;
AMMU.mediumPages[1].L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.mediumPages[1].L1_posted = AMMU.PostedPolicy_POSTED;
AMMU.mediumPages[1].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.mediumPages[1].L2_posted = AMMU.PostedPolicy_NON_POSTED;

/* Small Page */
AMMU.smallPages[0].pageEnabled = AMMU.Enable_YES;
AMMU.smallPages[0].logicalAddress = 0x00000000;
AMMU.smallPages[0].translatedAddress = 0x55020000;
AMMU.smallPages[0].translationEnabled = AMMU.Enable_YES;
AMMU.smallPages[0].size = AMMU.Small_16K;
AMMU.smallPages[0].volatileQualifier = AMMU.Volatile_FOLLOW;
AMMU.smallPages[0].L1_cacheable = AMMU.CachePolicy_CACHEABLE;
AMMU.smallPages[0].L1_posted = AMMU.PostedPolicy_NON_POSTED;
AMMU.smallPages[0].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.smallPages[0].L2_posted = AMMU.PostedPolicy_NON_POSTED;

AMMU.smallPages[1].pageEnabled = AMMU.Enable_YES;
AMMU.smallPages[1].logicalAddress = 0x40000000;
AMMU.smallPages[1].translatedAddress = 0x55080000;
AMMU.smallPages[1].translationEnabled = AMMU.Enable_YES;
AMMU.smallPages[1].size = AMMU.Small_16K;
AMMU.smallPages[1].volatileQualifier = AMMU.Volatile_FOLLOW;
AMMU.smallPages[1].L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.smallPages[1].L1_posted = AMMU.PostedPolicy_NON_POSTED;
AMMU.smallPages[1].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.smallPages[1].L2_posted = AMMU.PostedPolicy_NON_POSTED;

AMMU.smallPages[2].pageEnabled = AMMU.Enable_YES;
AMMU.smallPages[2].logicalAddress = 0x00004000;
AMMU.smallPages[2].translatedAddress = 0x55024000;
AMMU.smallPages[2].translationEnabled = AMMU.Enable_YES;
AMMU.smallPages[2].size = AMMU.Small_16K;
AMMU.smallPages[2].L1_cacheable = AMMU.CachePolicy_CACHEABLE;
AMMU.smallPages[2].L1_posted = AMMU.PostedPolicy_NON_POSTED;
AMMU.smallPages[2].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.smallPages[2].L2_posted = AMMU.PostedPolicy_NON_POSTED;

AMMU.smallPages[3].pageEnabled = AMMU.Enable_YES;
AMMU.smallPages[3].logicalAddress = 0x00008000;
AMMU.smallPages[3].translatedAddress = 0x55028000;
AMMU.smallPages[3].translationEnabled = AMMU.Enable_YES;
AMMU.smallPages[3].size = AMMU.Small_16K;
AMMU.smallPages[3].L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.smallPages[3].L1_posted = AMMU.PostedPolicy_NON_POSTED;
AMMU.smallPages[3].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.smallPages[3].L2_posted = AMMU.PostedPolicy_NON_POSTED;

AMMU.smallPages[4].pageEnabled = AMMU.Enable_YES;
AMMU.smallPages[4].logicalAddress = 0x20000000;
AMMU.smallPages[4].translatedAddress = 0x55020000;
AMMU.smallPages[4].translationEnabled = AMMU.Enable_YES;
AMMU.smallPages[4].size = AMMU.Small_16K;
AMMU.smallPages[4].L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.smallPages[4].L1_posted = AMMU.PostedPolicy_NON_POSTED;
AMMU.smallPages[4].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
AMMU.smallPages[4].L2_posted = AMMU.PostedPolicy_NON_POSTED;
