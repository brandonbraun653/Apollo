/*
 *  ======== cpsw_example.cfg ========
 *
 */

/* Load all required BIOS/XDC runtime packages */
var Memory                      =   xdc.useModule('xdc.runtime.Memory');
var BIOS                        =   xdc.useModule('ti.sysbios.BIOS');
var HeapMem                     =   xdc.useModule('ti.sysbios.heaps.HeapMem');
var HeapBuf                     =   xdc.useModule('ti.sysbios.heaps.HeapBuf');
var Log                         =   xdc.useModule('xdc.runtime.Log');
var Task                        =   xdc.useModule('ti.sysbios.knl.Task');
var Hwi			                =	xdc.useModule('ti.sysbios.family.c64p.Hwi');
var ECM     					= 	xdc.useModule('ti.sysbios.family.c64p.EventCombiner');

/* Load the CSL package */
var devType = "k2g"
var Csl = xdc.useModule('ti.csl.Settings');
Csl.deviceType = devType;

/* Load the CPPI package */
var Cppi                        =   xdc.loadPackage('ti.drv.cppi');     

/* Load the QMSS package */
var Qmss                        =   xdc.loadPackage('ti.drv.qmss');

/* Load the PA package */
/*
var Pa                          =   xdc.useModule('ti.drv.pa.Settings');
Pa.deviceType = devType;
*/

/* Load the RM package */
var Rm                          =   xdc.loadPackage('ti.drv.rm');

/* Load the Board package and set the board name */
var Board = xdc.loadPackage('ti.board');
Board.Settings.boardName = "evmK2G";
var System                      =   xdc.useModule('xdc.runtime.System');
SysStd                          =   xdc.useModule('xdc.runtime.SysStd');
System.SupportProxy             =   SysStd;

/* Create a default system heap using ti.bios.HeapMem. */
var heapMemParams1              =   new HeapMem.Params;
heapMemParams1.size             =   8192 * 30;
heapMemParams1.sectionName      =   "systemHeap";
Program.global.heap0            =   HeapMem.create(heapMemParams1);

/* This is the default memory heap. */
Memory.defaultHeapInstance      =   Program.global.heap0;

Program.sectMap["systemHeap"]   =   Program.platform.stackMemory;

/* Enable BIOS Task Scheduler */
BIOS.taskEnabled			=   true;

/*
 * Enable Event Groups here and registering of ISR for specific GEM INTC is done
 * using EventCombiner_dispatchPlug() and Hwi_eventMap() APIs
 */

ECM.eventGroupHwiNum[0] = 7;
ECM.eventGroupHwiNum[1] = 8;
ECM.eventGroupHwiNum[2] = 9;
ECM.eventGroupHwiNum[3] = 10;

/* Memory map */
Program.sectMap[".text"] = "MSMCSRAM"; 
Program.sectMap[".const"] = "MSMCSRAM"; 
Program.sectMap[".qmss"] = "L2SRAM"; 
Program.sectMap[".cppi"] = "L2SRAM"; 
