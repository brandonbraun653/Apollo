/* ========================================================================== */
/*                      CFG script for the McSPI sample                       */
/* ========================================================================== */

/* use modules */
var Task        = xdc.useModule('ti.sysbios.knl.Task');
var Idle        = xdc.useModule('ti.sysbios.knl.Idle');
var BIOS        = xdc.useModule('ti.sysbios.BIOS');
var Startup     = xdc.useModule('xdc.runtime.Startup');
var SysStd      = xdc.useModule('xdc.runtime.SysStd');
var System      = xdc.useModule('xdc.runtime.System');
var Assert      = xdc.useModule('xdc.runtime.Assert');
var Main        = xdc.useModule('xdc.runtime.Main');
var Memory      = xdc.useModule('xdc.runtime.Memory');
var Program     = xdc.useModule('xdc.cfg.Program');
var Diags       = xdc.useModule('xdc.runtime.Diags');
var Semaphore   = xdc.useModule('ti.sysbios.knl.Semaphore');
var HeapMem     = xdc.useModule('ti.sysbios.heaps.HeapMem');
var HeapBuf     = xdc.useModule('ti.sysbios.heaps.HeapBuf');
var Clock       = xdc.useModule('ti.sysbios.knl.Clock');
var Timestamp   = xdc.useModule('xdc.runtime.Timestamp');
var Core        = xdc.useModule('ti.sysbios.family.arm.ducati.Core');
var HalCore     = xdc.useModule('ti.sysbios.hal.Core');
var Hwi         = xdc.useModule('ti.sysbios.hal.Hwi');
var SyncSem     = xdc.useModule('ti.sysbios.syncs.SyncSem');
var Cache       = xdc.useModule('ti.sysbios.hal.unicache.Cache');
var HalCache    = xdc.useModule('ti.sysbios.hal.Cache');
var Task         = xdc.useModule ("ti.sysbios.knl.Task");
var HeapMem      = xdc.useModule ('ti.sysbios.heaps.HeapMem');

/* Enable cache */
Cache.enableCache = true;

/* Disable SMP BIOS */
BIOS.smpEnabled = false;

/* Bios lib instrumentation */
BIOS.libType = BIOS.LibType_Custom;

/* Fix for right clock of M4 */
BIOS.cpuFreq.hi = 0;
BIOS.cpuFreq.lo = 212500000; /* Actual CPU Clock Rate */

/* Clock tick in microseconds */
Clock.tickPeriod    = 1000;

/* Stack size when NULL is passed as stack during TSK create    */
Task.defaultStackSize   = 0x4000;
Task.defaultAffinity    = 0;

Memory.defaultHeapSize  = 0x15000;

/* ISR/SWI stack        */
Program.stack           = 0x4000;
/* Heap used when creating semaphore's, TSK's or malloc() ... */
Program.heap            = 0x15000;

/* allocate a config-params object */
var HeapParam = new HeapMem.Params;

/* optionally assign per-instance configs */
HeapParam.size = 180000;

/* create an instance-object */
Program.global.myHeap = HeapMem.create(HeapParam);
