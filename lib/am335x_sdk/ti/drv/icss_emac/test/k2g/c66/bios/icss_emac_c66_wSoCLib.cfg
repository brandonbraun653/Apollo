/*
 *  Copyright 2015-2017 by Texas Instruments Incorporated.
 *
 *  All rights reserved. Property of Texas Instruments Incorporated.
 *  Restricted rights to use, duplicate or disclose this code are
 *  granted through contract.
 *
 */

/* THIS FILE WAS GENERATED BY ti.sysbios.genx */

/*
 *  ======== icss_emac_c66_wSocLib.cfg ========
 *
 */

/* Load all required BIOS/XDC runtime packages */
var Defaults 		= xdc.useModule('xdc.runtime.Defaults');
var Main 			= xdc.useModule('xdc.runtime.Main');
var Memory                      =   xdc.useModule('xdc.runtime.Memory');
var BIOS                        =   xdc.useModule('ti.sysbios.BIOS');
var HeapMem                     =   xdc.useModule('ti.sysbios.heaps.HeapMem');
var HeapBuf                     =   xdc.useModule('ti.sysbios.heaps.HeapBuf');
var Log                         =   xdc.useModule('xdc.runtime.Log');
var Task                        =   xdc.useModule('ti.sysbios.knl.Task');
var Semaphore                   =   xdc.useModule('ti.sysbios.knl.Semaphore');
var Hwi                        = xdc.useModule('ti.sysbios.hal.Hwi');
var CpIntc                      =   xdc.useModule('ti.sysbios.family.c66.tci66xx.CpIntc');
var Cache  = xdc.useModule('ti.sysbios.family.c66.Cache');
var Ecm = xdc.useModule('ti.sysbios.family.c64p.EventCombiner');
var Core      = xdc.useModule('ti.sysbios.hal.Core');
var Timer      = xdc.useModule('ti.sysbios.timers.timer64.Timer');
var deviceType                     = "k2g"

/*use CSL package*/
var Csl 		= xdc.loadPackage('ti.csl');
Csl.Settings.deviceType  = deviceType;
/* Load the OSAL package */ 
var osType = "tirtos"
var Osal = xdc.useModule('ti.osal.Settings');
Osal.osType = osType;
Osal.socType = deviceType;

/* Load the uart package */
var Uart = xdc.loadPackage('ti.drv.uart');
Uart.Settings.socType = deviceType;
/* Load the Board package and set the board name */
var Board = xdc.loadPackage('ti.board');
Board.Settings.boardName = "iceK2G";
/* Load Profiling package */
var Utils = xdc.loadPackage('ti.utils.profiling');


/* Load the I2C package */
var I2c 			= xdc.loadPackage('ti.drv.i2c');

var Gpio 			= xdc.loadPackage('ti.drv.gpio');
/* Load the SPI package */
var Spi = xdc.loadPackage('ti.drv.spi');


/* Load the Icss_Emac package */
var Icss_Emac = xdc.loadPackage('ti.drv.icss_emac');
Icss_Emac.Settings.socType  = deviceType;
Icss_Emac.Settings.enableProfiling = true;

/* Load the PRUSS package */ 
var Pruss = xdc.loadPackage('ti.drv.pruss');
Pruss.Settings.socType  = deviceType;

var System                      =   xdc.useModule('xdc.runtime.System');
SysStd                          =   xdc.useModule('xdc.runtime.SysStd');
System.SupportProxy             =   SysStd;


/* Create a default system heap using ti.bios.HeapMem. */
var heapMemParams1              =   new HeapMem.Params;
heapMemParams1.size             =   0x50000;
heapMemParams1.sectionName      =   "systemHeap";
Program.global.heap0            =   HeapMem.create(heapMemParams1);

/* This is the default memory heap. */
Memory.defaultHeapInstance      =   Program.global.heap0;
Program.sectMap["systemHeap"]   =   Program.platform.stackMemory;
Program.sectMap[".text"] = "APP_CODE_MEM";
Program.sectMap[".data"] = "APP_CACHED_DATA_MEM";
Program.sectMap[".const"] = "APP_CACHED_DATA_MEM";
Program.sectMap[".plt"] = "APP_CACHED_DATA_MEM";
Program.sectMap[".fardata:benchmarking"] = "APP_CACHED_DATA_BLK1_MEM";

var memmap = Program.cpu.memoryMap;
/*
 * Enable Event Groups here and registering of ISR for specific GEM INTC is done
 * using EventCombiner_dispatchPlug() and Hwi_eventMap() APIs
 */
Ecm.eventGroupHwiNum[0] = 6;
Ecm.eventGroupHwiNum[1] = 7;
Ecm.eventGroupHwiNum[2] = 8;
Ecm.eventGroupHwiNum[3] = 9;

var exception		  =	xdc.useModule('ti.sysbios.family.c64p.Exception');
exception.enablePrint = true;

/* ================ BIOS configuration ================ */


/* Enable BIOS Task Scheduler */
BIOS.taskEnabled			=   true;

/* ================ Task configuration ================ */

/* No runtime stack checking is performed */
Task.checkStackFlag = false;


