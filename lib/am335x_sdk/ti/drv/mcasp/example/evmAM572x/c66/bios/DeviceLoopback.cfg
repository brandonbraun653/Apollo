/* ========================================================================== */
/*                      CFG script for the Audio sample                       */
/* ========================================================================== */

/* load the required files and packages                                       */
var GIO 		= xdc.useModule('ti.sysbios.io.GIO');
var Task        = xdc.useModule ("ti.sysbios.knl.Task");
var BIOS        = xdc.useModule ("ti.sysbios.BIOS");
var ECM         = xdc.useModule ("ti.sysbios.family.c64p.EventCombiner");
var System      = xdc.useModule ("xdc.runtime.System");
var SysStd      = xdc.useModule('xdc.runtime.SysStd');
var cache       = xdc.useModule ("ti.sysbios.hal.Cache");
var IntXbar      = xdc.useModule('ti.sysbios.family.shared.vayu.IntXbar');

var Hwi         = xdc.useModule ("ti.sysbios.family.c64p.Hwi");
var Sem         = xdc.useModule("ti.sysbios.knl.Semaphore");
var Log 		= xdc.useModule('xdc.runtime.Log');
var LoggerBuf 	= xdc.useModule('xdc.runtime.LoggerBuf');
var Memory 		= xdc.useModule('xdc.runtime.Memory')
var SysMin 		= xdc.useModule('xdc.runtime.SysMin');
var System 		= xdc.useModule('xdc.runtime.System');
var Defaults 	= xdc.useModule('xdc.runtime.Defaults');
var Main 		= xdc.useModule('xdc.runtime.Main');
var Diags 		= xdc.useModule('xdc.runtime.Diags');
var HeapMem     = xdc.useModule ("ti.sysbios.heaps.HeapMem");

var Edma        		= xdc.loadPackage ("ti.sdo.edma3.drv.sample");
var drv        		= xdc.loadPackage ("ti.sdo.edma3.drv");
var rm        		= xdc.loadPackage ("ti.sdo.edma3.rm");

/* Load the packages */
var socType           = "am572x";
var McASP               = xdc.loadPackage('ti.drv.mcasp');
McASP.Settings.socType  = socType;

var Csl = xdc.useModule('ti.csl.Settings');
Csl.deviceType = "am572x";
/* Load the i2c package */
var I2C               = xdc.loadPackage('ti.drv.i2c');
I2C.Settings.socType  = socType;

/* Load the uart package */
var Uart = xdc.loadPackage('ti.drv.uart');
Uart.Settings.socType  = socType;

/* Load the OSAL package */ 
var osType = "tirtos"
var Osal = xdc.useModule('ti.osal.Settings');
Osal.osType = osType;
Osal.socType = socType;

/* Load the Board package and set the board name */
var Board = xdc.loadPackage('ti.board');
Board.Settings.boardName = "evmAM572x";

/* 
 * The BIOS module will create the default heap for the system.
 * Specify the size of this default heap.
 */
BIOS.heapSize = 0x2000;

BIOS.cpuFreq.lo = 600000000;

/* System stack size (used by ISRs and Swis) */
Program.stack = 0x1000;

System.SupportProxy = SysStd;

/* allocate a config-params object */  
var HeapParam = new HeapMem.Params;  
  
/* optionally assign per-instance configs */  
HeapParam.size = 200000;
  
/* create an instance-object */  
Program.global.myHeap = HeapMem.create(HeapParam);  

var task0Params = new Task.Params();
task0Params.priority = 5;
task0Params.instance.name = "task0";

Program.global.task0 = Task.create("&Audio_echo_Task", task0Params);

ECM.eventGroupHwiNum[0] = 7;
ECM.eventGroupHwiNum[1] = 8;
ECM.eventGroupHwiNum[2] = 9;
ECM.eventGroupHwiNum[3] = 10;

// chnaging default tick of timer to 100us from default 1000us
var Clock = xdc.useModule('ti.sysbios.knl.Clock'); 
Clock.tickPeriod = 1000;

/* 
 * Create and install logger for the whole system
 */
var LoggerBuf = xdc.useModule('xdc.runtime.LoggerBuf');
var loggerBuf0 = LoggerBuf.create();

var Load = xdc.useModule('ti.sysbios.utils.Load');
Load.common$.logger = loggerBuf0;
var Diags = xdc.useModule('xdc.runtime.Diags');
Load.common$.diags_USER4 = Diags.ALWAYS_ON;

Program.sectMap["BOARD_IO_DELAY_DATA"] = "OCMC_RAM1";
Program.sectMap["BOARD_IO_DELAY_CODE"] = "OCMC_RAM1";
