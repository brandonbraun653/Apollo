/*
 *  Copyright 2009 by Texas Instruments Incorporated.
 *
 *  All rights reserved. Property of Texas Instruments Incorporated.
 *  Restricted rights to use, duplicate or disclose this code are
 *  granted through contract.
 *
 */

/* THIS FILE WAS GENERATED BY ti.sysbios.genx */
var Edma        		= xdc.loadPackage ("ti.sdo.edma3.drv.sample");
var drv        		= xdc.loadPackage ("ti.sdo.edma3.drv");
var rm        		= xdc.loadPackage ("ti.sdo.edma3.rm");

/*
 *  ======== bcp_test.cfg ========
 *
 */

/* Load all required BIOS/XDC runtime packages */
var Memory                      =   xdc.useModule('xdc.runtime.Memory');
var BIOS                        =   xdc.useModule('ti.sysbios.BIOS');
var HeapMem                     =   xdc.useModule('ti.sysbios.heaps.HeapMem');
var HeapBuf                     =   xdc.useModule('ti.sysbios.heaps.HeapBuf');
var Log                         =   xdc.useModule('xdc.runtime.Log');
var Task                        =   xdc.useModule('ti.sysbios.knl.Task');
var Semaphore                   =   xdc.useModule('ti.sysbios.knl.Semaphore');
var Hwi			                =	xdc.useModule('ti.sysbios.family.c64p.Hwi');
var ECM     					= 	xdc.useModule('ti.sysbios.family.c64p.EventCombiner');
var CpIntc                      =   xdc.useModule('ti.sysbios.family.c66.tci66xx.CpIntc');
var devType = "k2g"
var socType           = "k2g";

/*use CSL package*/
var Csl = xdc.loadPackage('ti.csl');
Csl.Settings.deviceType = socType;

/* Load the OSAL package */
var osType = "tirtos"
var Osal = xdc.useModule('ti.osal.Settings');
Osal.osType = osType;
Osal.socType = devType;

/* Load Profiling package */
var Utils = xdc.loadPackage('ti.utils.profiling');

/* Load the MMCSD package */
//var Mmcsd = xdc.loadPackage('ti.drv.mmcsd');
// Mmcsd.Settings.useDma="true";
var mmcsdSettings = xdc.useModule ('ti.drv.mmcsd.Settings');
mmcsdSettings.socType=devType;
mmcsdSettings.useDma = "true";

//Mmcsd.Settings.enableProfiling = true;

var Fatfs = xdc.loadPackage('ti.fs.fatfs');

/* Load the GPIO package */
var GPIO = xdc.loadPackage('ti.drv.gpio');

/* Load the UART package */
var UART = xdc.loadPackage('ti.drv.uart');    
UART.Settings.socType = devType;  

/* Load and use the CSL packages */
var Csl = xdc.useModule('ti.csl.Settings');
Csl.deviceType = devType;

/* Load the Board package and set the board name */
var Board = xdc.loadPackage('ti.board');
Board.Settings.boardName = "iceK2G";

var System                      =   xdc.useModule('xdc.runtime.System');
SysStd                          =   xdc.useModule('xdc.runtime.SysStd');
System.SupportProxy             =   SysStd;
System.extendedFormats += "%f";
/* Create a default system heap using ti.bios.HeapMem. */
var heapMemParams1              =   new HeapMem.Params;
heapMemParams1.size             =   8192 * 25;
heapMemParams1.sectionName      =   "systemHeap";
Program.global.heap0            =   HeapMem.create(heapMemParams1);


/* No runtime stack checking is performed */
Task.checkStackFlag = false;


/* Reduce the number of task priorities */
Task.numPriorities = 4;


/* This is the default memory heap. */
Memory.defaultHeapInstance      =   Program.global.heap0;

Program.sectMap["systemHeap"]   =   Program.platform.stackMemory;
var memmap = Program.cpu.memoryMap;

/****** IPC - Shared Memory Settings ********/
/* IPC packages */

ECM.eventGroupHwiNum[0] = 7;
ECM.eventGroupHwiNum[1] = 8;
ECM.eventGroupHwiNum[2] = 9;

/*Startup = xdc.useModule('xdc.runtime.Startup');
Startup.firstFxns.$add('&myStartupFxn');*/

/* Configure the shared memory heap for shared memory allocations required by the
 * CPPI and QMSS Libraries */
///SharedRegion.translate = false;

/* Create a shared memory heap */

/*
MultiProc.setConfig(null, ["CORE0"]);


Ipc.procSync = Ipc.ProcSync_ALL;


for (var i = 0; i < MultiProc.numProcessors; i++) {
    Ipc.setEntryMeta({
        remoteProcId: i,
        setupNotify: false,
        setupMessageQ: false,
    });
}


SharedRegion.setEntryMeta(0,
    { base: 0x0C010000,
      len: 0x00100000,
      ownerProcId: 0,
      isValid: true,
      name: "sharemem",
    });
*/

/* Enable BIOS Task Scheduler */
BIOS.taskEnabled			=   true;

/*
 * Enable Event Groups here and registering of ISR for specific GEM INTC is done
 * using EventCombiner_dispatchPlug() and Hwi_eventMap() APIs
 */
var exception			                =	xdc.useModule('ti.sysbios.family.c64p.Exception');
exception.enablePrint = true;

Program.sectMap[".text"] = "DDR3";
Program.sectMap[".const"] = "DDR3";
Program.sectMap[".plt"] = "DDR3";
Program.sectMap[".far"] = "DDR3";
Program.sectMap[".benchmark_buffer"] = "DDR3";
Program.sectMap[".fardata:benchmarking"] = "DDR3";
Program.sectMap["BOARD_IO_DELAY_DATA"] = "MSMCSRAM";
Program.sectMap["BOARD_IO_DELAY_CODE"] = "MSMCSRAM";
/*
 *  @(#) ti.sysbios.genx; 2, 0, 0, 0,275; 4-29-2009 15:45:06; /db/vtree/library/trees/avala/avala-k25x/src/
 */

/* Define and add one Task Hook Set */
Task.addHookSet({
	registerFxn: '&TaskRegisterId',
	switchFxn: '&mySwitch',
});
