/* parasoft-begin-suppress MISRA2012-RULE-1_1_a_c99-2 "C99 - limits" parasoft-begin-suppress MISRA2012-RULE-1_1_a_c90-2 "C90 - limits" */
/* parasoft-begin-suppress item MISRA2012-DIR-4_8 "Consider hiding implementation of structure, DRV-3667" */

/**********************************************************************
* Copyright (C) 2012-2019 Cadence Design Systems, Inc.
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
*
* 1. Redistributions of source code must retain the above copyright
* notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
* notice, this list of conditions and the following disclaimer in the
* documentation and/or other materials provided with the distribution.
* 3. Neither the name of the copyright holder nor the names of its
* contributors may be used to endorse or promote products derived from
* this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*
* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT
*
**********************************************************************/

#ifndef REG_CSIRX_REGS_H_
#define REG_CSIRX_REGS_H_



typedef struct __attribute__((packed)) CSIRX_Regs_s {
    volatile uint32_t device_config;
    volatile uint32_t soft_reset;
    volatile uint32_t static_cfg;
    volatile char pad__0[0x4U];
    volatile uint32_t error_bypass_cfg;
    volatile char pad__1[0x4U];
    volatile uint32_t monitor_irqs;
    volatile uint32_t monitor_irqs_mask_cfg;
    volatile uint32_t info_irqs;
    volatile uint32_t info_irqs_mask_cfg;
    volatile uint32_t error_irqs;
    volatile uint32_t error_irqs_mask_cfg;
    volatile char pad__2[0x10U];
    volatile uint32_t dphy_lane_control;
    volatile char pad__3[0x4U];
    volatile uint32_t dphy_status;
    volatile uint32_t dphy_err_status_irq;
    volatile uint32_t dphy_err_irq_mask_cfg;
    volatile char pad__4[0xCU];
    volatile uint32_t integration_debug;
    volatile char pad__5[0x10U];
    volatile uint32_t error_debug;
    volatile char pad__6[0x8U];
    volatile uint32_t test_generic;
    volatile char pad__7[0x7CU];
    volatile uint32_t stream0_ctrl;
    volatile uint32_t stream0_status;
    volatile uint32_t stream0_data_cfg;
    volatile uint32_t stream0_cfg;
    volatile uint32_t stream0_monitor_ctrl;
    volatile uint32_t stream0_monitor_frame;
    volatile uint32_t stream0_monitor_lb;
    volatile uint32_t stream0_timer;
    volatile uint32_t stream0_fcc_cfg;
    volatile uint32_t stream0_fcc_ctrl;
    volatile uint32_t stream0_fifo_fill_lvl;
    volatile char pad__8[0xD4U];
    volatile uint32_t stream1_ctrl;
    volatile uint32_t stream1_status;
    volatile uint32_t stream1_data_cfg;
    volatile uint32_t stream1_cfg;
    volatile uint32_t stream1_monitor_ctrl;
    volatile uint32_t stream1_monitor_frame;
    volatile uint32_t stream1_monitor_lb;
    volatile uint32_t stream1_timer;
    volatile uint32_t stream1_fcc_cfg;
    volatile uint32_t stream1_fcc_ctrl;
    volatile uint32_t stream1_fifo_fill_lvl;
    volatile char pad__9[0xD4U];
    volatile uint32_t stream2_ctrl;
    volatile uint32_t stream2_status;
    volatile uint32_t stream2_data_cfg;
    volatile uint32_t stream2_cfg;
    volatile uint32_t stream2_monitor_ctrl;
    volatile uint32_t stream2_monitor_frame;
    volatile uint32_t stream2_monitor_lb;
    volatile uint32_t stream2_timer;
    volatile uint32_t stream2_fcc_cfg;
    volatile uint32_t stream2_fcc_ctrl;
    volatile uint32_t stream2_fifo_fill_lvl;
    volatile char pad__10[0xD4U];
    volatile uint32_t stream3_ctrl;
    volatile uint32_t stream3_status;
    volatile uint32_t stream3_data_cfg;
    volatile uint32_t stream3_cfg;
    volatile uint32_t stream3_monitor_ctrl;
    volatile uint32_t stream3_monitor_frame;
    volatile uint32_t stream3_monitor_lb;
    volatile uint32_t stream3_timer;
    volatile uint32_t stream3_fcc_cfg;
    volatile uint32_t stream3_fcc_ctrl;
    volatile uint32_t stream3_fifo_fill_lvl;
    volatile char pad__11[0x4D4U];
    volatile uint32_t asf_int_status;
    volatile uint32_t asf_int_raw_status;
    volatile uint32_t asf_int_mask;
    volatile uint32_t asf_int_test;
    volatile uint32_t asf_fatal_nonfatal_select;
    volatile char pad__12[0xCU];
    volatile uint32_t asf_sram_corr_fault_status;
    volatile uint32_t asf_sram_uncorr_fault_status;
    volatile uint32_t asf_sram_fault_stats;
    volatile char pad__13[0x4U];
    volatile uint32_t asf_trans_to_ctrl;
    volatile uint32_t asf_trans_to_fault_mask;
    volatile uint32_t asf_trans_to_fault_status;
    volatile char pad__14[0x4U];
    volatile uint32_t asf_protocol_fault_mask;
    volatile uint32_t asf_protocol_fault_status;
    volatile char pad__15[0x6B4U];
    volatile uint32_t id_prod_ver;
} CSIRX_Regs;

#endif /* REG_CSIRX_REGS_H_ */

/* parasoft-end-suppress MISRA2012-RULE-1_1_a_c99-2 "C99 - limits" */
/* parasoft-end-suppress MISRA2012-RULE-1_1_a_c90-2 "C90 - limits" */
/* parasoft-end-suppress MISRA2012-DIR-4_8 "Consider hiding implementation of structure, DRV-3667" */

